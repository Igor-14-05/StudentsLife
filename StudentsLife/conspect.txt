Приложение - это как отдельная категория проекта. Все категории можно выделять в приложения.
Например работу с пользователями, там с регистрациями
 python manage.py runserver - запуск сервера
 python manage.py startapp main - создание приложения под названием main
В любом приложении будет набор файлов
1 - папка migrations - все папки, вайлы здесь будут которые связаны с миграциями. Они нужны, чтобы описать
    структуру базы данных. На их основе связаываем наши странички с базой данных
2 - admin.py - в нем записываем какие конкретно таблички должны отображаться в панеле администратора
3 - apps.py - описываются какие-то глобальные настройки конкретно для этого приложения. А вот в settings.py
    описываем для всего джанго проекта
4 - models.py - в нем можем создать класс на основе которого будет создана табличка в базе данных
5 - tests.py - можем там выполнять тестирование, юнит тестирование для нашего проекта
6 - views.py - отвечает за методы которые будут вызваны при переходе на ту или иную страницу.
    например пользователь переходит на главную страницу, мы это отслеживаем через urls.py, переход в приложение
    и там отследивание через views.py. И там уже вызовем метод который покажет определенный шаблон, определенную страничу

После создания приложения нужно регистрировать в settings.py installed apps
Также важно отслеживание страниц прописывается в файле urls.py в urlpatterns

Все html  шаблоны должны храниться в папке templates. Внури нее лучше создать еще одну папку, которая
будет названа также как и само приложение, где эта папку создана. Так как джанго объединяет все папки теплатес
и если вдруг в приложениях одинаковые файлы html то они могу замениться

Можно создать общий шаблон файла, так как в html файле может все повторяться

Шаблонизатор Jinja - предоставляет набор различных возможностей . При помощт него можно условие создать,
цикл например в самом коде html
    {% block content %}

    {% endblock %}
    Можно либо block либо section
    Внутри создается код. Главное между скобкой и знаком процента не ставить пробелы.
    {% extends 'main/layout.html' %} - прописываем в другом файле получается в том, где мы прописали
    мы в него наследуем лаяут
{% include 'main/index.html' %} - позволяет к одной страничке подключать другие странички
bootstrap - css фрэймворк, который обеспечивает нас готовыми стилями

Все статические файлы хранятся в папке static
{% load static %} - подключение статических файлов к html


python manage.py startapp - создание нового приложения. После этого прописываем название само
